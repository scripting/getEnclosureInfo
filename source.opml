<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Tue, 25 Jul 2023 13:14:41 GMT -->

<!-- 
   Hi this is Dave Winer. I write all my project code in an outliner, which 
   generates all the files that make up this GitHub project. You'll see a 
   source.opml file like this in each of my projects. It contains the outline 
   source that the repo files were generated from. This is the most logical place 
   to store them. You can read the code in any outliner that supports OPML, which 
   includes http://drummer.scripting.com. You can use the Open URL command in 
   Drummer's File menu to open the "raw" version of this file straight from the 
   GitHub repo.
 -->

<opml version="2.0">
	<head>
		<title>nodeEditor: getEnclosureInfo</title>
		<dateCreated>Mon, 24 Jul 2023 13:52:32 GMT</dateCreated>
		<dateModified>Tue, 25 Jul 2023 13:14:41 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 4, 14, 16, 24, 26</expansionState>
		<vertScrollState>2</vertScrollState>
		<windowTop>184</windowTop>
		<windowLeft>1043</windowLeft>
		<windowBottom>917</windowBottom>
		<windowRight>2015</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/getenclosureinfo/" created="Thu, 13 Jul 2023 14:21:20 GMT">
			<outline text="worknotes.md" created="Sun, 18 Jun 2023 16:13:00 GMT">
				<outline text="7/24/23; 9:23:30 AM by DW" created="Sun, 18 Jun 2023 16:13:02 GMT">
					<outline text="Replace the part of pub2.fargo.io that's still in use." created="Sun, 18 Jun 2023 16:13:04 GMT"/>
					<outline text="Example of use:" created="Mon, 24 Jul 2023 14:05:39 GMT">
						<outline text="http://pub2.fargo.io:5347/getenclosureinfo?url=http://scripting.com/2023/07/24/mantonVoicemail.m4a" created="Mon, 24 Jul 2023 14:05:25 GMT"/>
						</outline>
					</outline>
				</outline>
			<outline text="package.json">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;getenclosureinfo&quot;,"/>
					<outline text="&quot;description&quot;: &quot;Get information about a data file necessary for including in an RSS enclosure element.&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.0&quot;,"/>
					<outline text="&quot;main&quot;: &quot;getenclosureinfo.js&quot;,"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;davehttp&quot;: &quot;*&quot;,"/>
						<outline text="&quot;request&quot;: &quot;*&quot;"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="getenclosureinfo.js">
				<outline text="const fs = require (&quot;fs&quot;);"/>
				<outline text="const request = require (&quot;request&quot;);"/>
				<outline text="const utils = require (&quot;daveutils&quot;);"/>
				<outline text="const davehttp = require (&quot;davehttp&quot;);"/>
				<outline text="" created="Mon, 24 Jul 2023 13:43:29 GMT"/>
				<outline text="const config = {" created="Mon, 24 Jul 2023 13:43:29 GMT">
					<outline text="port: 5347,"/>
					<outline text="flAllowAccessFromAnywhere: true, "/>
					<outline text="flLogToConsole: true"/>
					<outline text="};" created="Mon, 24 Jul 2023 13:43:33 GMT"/>
					</outline>
				<outline text="" created="Mon, 24 Jul 2023 13:26:13 GMT"/>
				<outline text="function getEnclosureInfo (url, callback) { //7/24/23 by DW" created="Mon, 24 Jul 2023 13:31:06 GMT">
					<outline text="var options = {" created="Wed, 12 Feb 2014 23:09:59 GMT" pgfnum="37675">
						<outline text="uri: url," created="Wed, 12 Feb 2014 23:10:16 GMT" pgfnum="37680"/>
						<outline text="method: &quot;HEAD&quot;" created="Sat, 15 Feb 2014 19:13:25 GMT" pgfnum="37743"/>
						<outline text="};" created="Wed, 12 Feb 2014 23:10:06 GMT" pgfnum="37679"/>
						</outline>
					<outline text="request (options, function (err, response, body) {">
						<outline text="if (err) {" created="Mon, 24 Jul 2023 13:31:55 GMT">
							<outline text="callback (err);" created="Mon, 24 Jul 2023 13:32:01 GMT"/>
							<outline text="}" created="Mon, 24 Jul 2023 13:32:04 GMT"/>
							</outline>
						<outline text="else {" created="Mon, 24 Jul 2023 13:32:05 GMT">
							<outline text="if (response.statusCode == 200) {" created="Wed, 12 Feb 2014 23:29:28 GMT" pgfnum="37700">
								<outline text="callback (undefined, {" created="Mon, 24 Jul 2023 13:33:06 GMT">
									<outline text="length: Number (response.headers [&quot;content-length&quot;])," created="Mon, 24 Jul 2023 13:33:21 GMT"/>
									<outline text="type: response.headers [&quot;content-type&quot;]" created="Mon, 24 Jul 2023 13:33:23 GMT"/>
									<outline text="});" created="Mon, 24 Jul 2023 13:33:15 GMT"/>
									</outline>
								<outline text="}" created="Wed, 12 Feb 2014 23:29:42 GMT" pgfnum="37701"/>
								</outline>
							<outline text="else {" created="Mon, 24 Jul 2023 13:32:18 GMT">
								<outline text="const message = &quot;Can't get the enclosure info because we received status code == &quot; + response.statusCode + &quot;.&quot;;" created="Mon, 24 Jul 2023 13:32:22 GMT"/>
								<outline text="callback ({message});" created="Mon, 24 Jul 2023 13:32:01 GMT"/>
								<outline text="}" created="Mon, 24 Jul 2023 13:32:19 GMT"/>
								</outline>
							<outline text="}" created="Mon, 24 Jul 2023 13:32:07 GMT"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Mon, 24 Jul 2023 13:31:21 GMT"/>
					</outline>
				<outline text="" created="Mon, 24 Jul 2023 13:26:13 GMT"/>
				<outline text="davehttp.start (config, function (theRequest) {">
					<outline text="const params = theRequest.params;" created="Sat, 03 Dec 2022 01:25:31 GMT"/>
					<outline text="function returnPlainText (s) {">
						<outline text="theRequest.httpReturn (200, &quot;text/plain&quot;, s.toString ());"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnNotFound () {">
						<outline text="theRequest.httpReturn (404, &quot;text/plain&quot;, &quot;Not found.&quot;);"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnError (jstruct) {">
						<outline text="theRequest.httpReturn (500, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnData (jstruct) {">
						<outline text="if (jstruct === undefined) {">
							<outline text="jstruct = {};"/>
							<outline text="}"/>
							</outline>
						<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
						<outline text="}"/>
						</outline>
					<outline text="function httpReturn (err, jstruct) {">
						<outline text="if (err) {">
							<outline text="returnError (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="returnData (jstruct);"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function returnJSONP (err, jstruct) {">
						<outline text="if (err) {">
							<outline text="returnError (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="const jsonptext = &quot;getData (&quot; + JSON.stringify (jstruct) + &quot;)&quot;;" created="Mon, 24 Jul 2023 14:41:18 GMT"/>
							<outline text="theRequest.httpReturn (200, &quot;application/javascript&quot;, jsonptext);"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="switch (theRequest.lowerpath) {">
						<outline text="case &quot;/getenclosureinfo&quot;:">
							<outline text="getEnclosureInfo (params.url, returnJSONP);" created="Mon, 24 Jul 2023 13:35:10 GMT"/>
							<outline text="return (true);"/>
							</outline>
						<outline text="case &quot;/now&quot;:">
							<outline text="returnPlainText (new Date ());"/>
							<outline text="return (true);"/>
							</outline>
						<outline text="default: " created="Mon, 24 Jul 2023 13:35:44 GMT">
							<outline text="returnNotFound ();" created="Mon, 24 Jul 2023 13:35:54 GMT"/>
							<outline text="return (true);" created="Mon, 24 Jul 2023 13:35:49 GMT"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="});"/>
					</outline>
				<outline text=""/>
				</outline>
			<outline text="readme.md" created="Mon, 24 Jul 2023 13:58:25 GMT">
				<outline text="# getEnclosureInfo">
					<outline text="Node app to get information about a data file necessary for including in an RSS enclosure element."/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Mon, 24 Jul 2023 13:53:00 GMT">
			<outline text="nodeEditorSuite.utilities.buildEnclosureinfo ()" created="Fri, 21 Jul 2023 13:59:13 GMT"/>
			</outline>
		</body>
	</opml>
